{
	"info": {
		"_postman_id": "30dff7e4-71e7-414c-88a4-861b1ebb18e6",
		"name": "HamsterWarsV2API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21173936"
	},
	"item": [
		{
			"name": "Get Hamsters",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
							"    console.log(response.json());\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:5001/hamsters",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "5001",
					"path": [
						"hamsters"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Random Hamster",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:5001/hamsters/random",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "5001",
					"path": [
						"hamsters",
						"random"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Hamster by Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:5001/hamsters/1",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "5001",
					"path": [
						"hamsters",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add a Hamster",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Name\" : \"NewHamster\",\r\n    \"Age\" : 2,\r\n    \"FavFood\" : \"Food\",\r\n    \"Loves\" : \"Loves\",\r\n    \"ImgName\" : \"newimage.jpg\",\r\n    \"ImgData\" : null\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:5001/hamsters",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "5001",
					"path": [
						"hamsters"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update a Hamster by Id",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Name\" : \"NewName\",\r\n    \"Age\" : 5,\r\n    \"FavFood\" : \"NewFood\",\r\n    \"Loves\" : \"NewLoves\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:5001/hamsters/1",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "5001",
					"path": [
						"hamsters",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a Hamster by Id",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://localhost:5001/hamsters/1",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "5001",
					"path": [
						"hamsters",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all Battles",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:5001/matches",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "5001",
					"path": [
						"matches"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Battle by Id",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:5001/matches/1",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "5001",
					"path": [
						"matches",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add a Battle",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"WinnerHamsterId\" : 5,\r\n    \"LoserHamsterId\" : 4\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:5001/matches",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "5001",
					"path": [
						"matches"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a Battle",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://localhost:5001/matches/1",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "5001",
					"path": [
						"matches",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all Battles by Hamster Id",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:5001/matchWinners/1",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "5001",
					"path": [
						"matchWinners",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Winners",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:5001/winners",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "5001",
					"path": [
						"winners"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Losers",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:5001/losers",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "5001",
					"path": [
						"losers"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Defeated Hamsters",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:5001/defeated/1",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "5001",
					"path": [
						"",
						"defeated",
						"1"
					]
				}
			},
			"response": []
		}
	]
}