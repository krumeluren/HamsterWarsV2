@inject HttpClient Http
@page "/history"
@using System.Net.Http.Json
@using HamsterWarsBlazorUI.Shared.MatchTable
@using Presentation.HamsterWarsBlazorUI.Models

@if(Error)
{
    <ErrorMessage Message="Error loading matches"></ErrorMessage>
}
else if (Battles == null)
{
    <span>Loading...</span>
}
else
{
    <MatchTable Matches="@Battles" ></MatchTable>
}

@code {

    public IEnumerable<Match>? Battles { get; set; }
    public IEnumerable<Hamster>? Hamsters { get; set; }
    private bool Error { get; set; }

    protected override async Task OnInitializedAsync()
    {
        
        var responseMessage = await Http.GetAsync("/matches");
        if (!responseMessage.IsSuccessStatusCode)
        {
            Error = true;
            return;
            
        }
        Battles = await responseMessage.Content.ReadFromJsonAsync<IEnumerable<Match>>();
        Battles = Battles.OrderByDescending(m => m.TimeOfPost);
        
        var hamstersResponseMessage = await Http.GetAsync("/hamsters");
        if (!hamstersResponseMessage.IsSuccessStatusCode)
        {
            Error = true;
            return;
        }
        Hamsters = await hamstersResponseMessage.Content.ReadFromJsonAsync<IEnumerable<Hamster>>();
        
        foreach (var battle in Battles)
        {        
            battle.WinnerHamster = Hamsters.FirstOrDefault(h => h.Id == battle.WinnerHamsterId);
            battle.LoserHamster = Hamsters.FirstOrDefault(h => h.Id == battle.LoserHamsterId);
        }
    }
}