@inject HttpClient Http
@page "/gallery"
@using Presentation.HamsterWarsBlazorUI.Models

<div class="p-1 text-center bg-light">
    <h1 class="p-2 px-3 text-uppercase text-primary">Gallery</h1>
</div>

@if (Error)
{
    <ErrorMessage Message="Could not load hamsters"></ErrorMessage>
}
else
{
    <CreateHamsterModal onClose="OnInitializedAsync"></CreateHamsterModal>
    <div class="grid-wrap">
        <div class="grid-container">
            @if (hamsters != null && hamsters.Count() > 0)
            {
                @foreach (var hamster in hamsters)
                {
                    <div class="card-container">
                        <HamsterCard Clickable onDeleted="OnInitializedAsync" DisplayModalButton hamster="@hamster"></HamsterCard>
                    </div>
                }
            }
            else
            {
                <span>Loading...</span>
            }
        </div>
    </div>
}

@code {
    /// <summary>
    /// Hamsters to display in the grid
    /// </summary>
    private Hamster[]? hamsters;

    private bool Error;

    protected override async Task OnInitializedAsync()
    {
        var response = await Http.GetAsync("/hamsters");
        if (!response.IsSuccessStatusCode)
        {
            Error = true;
            StateHasChanged();
            return;

        }
        hamsters = await response.Content.ReadFromJsonAsync<Hamster[]>();
        if(hamsters.Count() == 0)
        {
            Error = true;
            StateHasChanged();
            return;
        }
    }
}
